/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <20>;
};

/ {
    combos {
        compatible = "zmk,combos";

        funclayer {
            bindings = <&sl 4>;
            key-positions = <37 40>;
            layers = <0 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W               &kp E            &kp R             &kp T        &kp Y    &kp U              &kp I            &kp O                &kp P     &kp DELETE
&kp LCTRL  &kp A  &mt LEFT_CONTROL S  &mt RIGHT_ALT D  &mt LEFT_SHIFT F  &kp G        &kp H    &mt RIGHT_SHIFT J  &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X               &kp C            &kp V             &kp B        &kp N    &kp M              &kp COMMA        &kp DOT              &kp FSLH  &kp ESC
                                      &kp LGUI         &mo 1             &kp SPACE    &kp RET  &mo 2              &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6           &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT         &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans           &trans    &trans    &trans     &tog 3  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RIGHT_SHIFT  &mo 4     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL        &kp AT         &kp HASH          &kp DLLR           &kp PRCNT           &kp CARET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS  &kp BACKSLASH  &kp BSPC
&kp LCTRL  &kp UNDERSCORE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE    &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS   &kp SLASH      &kp GRAVE
&kp LSHFT  &trans          &trans         &kp COMMA         &kp PERIOD         &kp QUESTION        &kp UNDER  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL  &kp PIPE       &kp TILDE
                                          &kp LALT          &to 4              &kp SPACE           &kp RET    &trans                &kp DELETE
            >;
        };

        layer_3 {
            bindings = <
&mt ESC I       &kp Q  &kp W  &kp E      &kp R             &kp T             &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&mt TAB M       &kp A  &kp S  &kp D      &kp F             &kp G             &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&mt LEFT_ALT P  &kp Z  &kp X  &kp C      &kp V             &kp B             &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                              &kp SPACE  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &trans  &tog 3  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans          &trans      &kp K_VOLUME_UP  &kp K_VOLUME_DOWN  &trans          &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &kp K_PREVIOUS  &kp K_NEXT  &kp K_MUTE       &kp K_PLAY_PAUSE   &kp K_STOP      &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans          &trans      &trans           &trans             &kp LEFT_ALT    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                                    &trans           &trans             &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        funcAndMedia {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};